/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms;

import DAO.DAOReserva;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import Classes.Reserva;
import static Forms.frmMain.escritorio;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Jorge
 */
public class frmReserva extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmReserva
     */
    String[] Cabecera = {"Id Reserva", "Id Habitación", "Id Cliente", "Fecha de Llegada", "Fecha de Salida", "Número de Noches", "Estado"};

    int ID_Recuperado;
    DefaultTableModel DTM;
    DAOReserva DAO = new DAOReserva();
    List<Reserva> LR = new LinkedList<>();
    TableRowSorter<DefaultTableModel> Filtro;

    public frmReserva() {
        initComponents();
        RecuperarDesdeBD();
        inhabilitar();
    }

    public void RecuperarDesdeBD() {
        LR = DAO.ListarReservas();
        DTM = new DefaultTableModel(null, Cabecera);
        for (Reserva R : LR) {
            DTM.addRow(R.Convertir());
        }
        tablaReserva.setModel(DTM);

        Filtro = new TableRowSorter(DTM); //necesario para filtrar
        tablaReserva.setRowSorter(Filtro);  //necesario para filtrar

        Configuracion();
    }

    public void Configuracion() {
        //esconder la columna ID
        tablaReserva.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaReserva.getColumnModel().getColumn(0).setMinWidth(0);
        tablaReserva.getColumnModel().getColumn(0).setPreferredWidth(0);

        tablaReserva.getColumnModel().getColumn(1).setMaxWidth(0);
        tablaReserva.getColumnModel().getColumn(1).setMinWidth(0);
        tablaReserva.getColumnModel().getColumn(1).setPreferredWidth(0);

        tablaReserva.getColumnModel().getColumn(2).setMaxWidth(0);
        tablaReserva.getColumnModel().getColumn(2).setMinWidth(0);
        tablaReserva.getColumnModel().getColumn(2).setPreferredWidth(0);
    }

    private void Filtrar() {
        try {
            String Texto = txtfiltrar.getText();
            Filtro.setRowFilter(RowFilter.regexFilter(Texto));
        } catch (Exception e) {
        }
    }

    void inhabilitar() {
        txtidcliente.setVisible(false);
        txtidhabitacion.setVisible(false);
        txtidreserva.setVisible(false);
        txtnumero.setEnabled(false);
        txtcliente.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtnumero = new javax.swing.JTextField();
        txtcliente = new javax.swing.JTextField();
        txtnoches = new javax.swing.JTextField();
        cmbEstado = new javax.swing.JComboBox<>();
        datFechaS = new com.toedter.calendar.JDateChooser();
        datFechaL = new com.toedter.calendar.JDateChooser();
        BuscarCliente = new javax.swing.JButton();
        buscarHabitacion = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtidhabitacion = new javax.swing.JTextField();
        txtidcliente = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        txtidreserva = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReserva = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txtfiltrar = new javax.swing.JTextField();
        btnPago = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSeleccionar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnCambiar = new javax.swing.JButton();

        jLabel8.setText("jLabel8");

        jLabel9.setText("jLabel9");

        setBackground(new java.awt.Color(102, 102, 255));
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setForeground(new java.awt.Color(244, 245, 244));

        jPanel1.setBackground(new java.awt.Color(203, 249, 232));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro de Reservas"));

        jLabel1.setText("Habitación:");

        jLabel2.setText("Cliente:");

        jLabel3.setText("Fecha Llegada:");

        jLabel4.setText("Fecha Salida:");

        jLabel5.setText("Número de Noches:");

        jLabel6.setText("Estado:");

        txtnumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnumeroActionPerformed(evt);
            }
        });

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Reservada" }));

        BuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/lupita.png"))); // NOI18N
        BuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarClienteActionPerformed(evt);
            }
        });

        buscarHabitacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/lupita.png"))); // NOI18N
        buscarHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarHabitacionActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(244, 245, 244));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/nuevo.png"))); // NOI18N
        jButton3.setText("Nuevo");
        jButton3.setBorderPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtidhabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidhabitacionActionPerformed(evt);
            }
        });

        txtidcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidclienteActionPerformed(evt);
            }
        });

        btnRegistrar.setBackground(new java.awt.Color(244, 245, 244));
        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/guardar.png"))); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.setBorderPainted(false);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        txtidreserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidreservaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(64, 64, 64)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnumero, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(buscarHabitacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BuscarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtidreserva, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnRegistrar)
                                        .addGap(23, 23, 23)))))
                        .addGap(0, 28, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(90, 90, 90)
                                .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(txtidcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(txtidhabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtnoches, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(datFechaS, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                                .addComponent(datFechaL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarHabitacion))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuscarCliente)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(datFechaL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(datFechaS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtnoches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(btnRegistrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtidcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtidhabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtidreserva, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(225, 249, 203));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado de Reservas"));

        tablaReserva.setBackground(new java.awt.Color(182, 226, 99));
        tablaReserva.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaReserva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaReservaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaReserva);

        jLabel10.setText("Filtrar:");

        txtfiltrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Filtrar(evt);
            }
        });

        btnPago.setBackground(new java.awt.Color(244, 245, 244));
        btnPago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/metodo-de-pago.png"))); // NOI18N
        btnPago.setText("Realizar Pago");
        btnPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagoActionPerformed(evt);
            }
        });

        btnCerrar.setBackground(new java.awt.Color(244, 245, 244));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cerrar.png"))); // NOI18N
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(244, 245, 244));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelado.png"))); // NOI18N
        btnEliminar.setText("Cancelar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSeleccionar.setBackground(new java.awt.Color(244, 245, 244));
        btnSeleccionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/seleccione.png"))); // NOI18N
        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(244, 245, 244));
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/editar.png"))); // NOI18N
        btnActualizar.setText("Modificar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnCambiar.setBackground(new java.awt.Color(244, 245, 244));
        btnCambiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/Img/llegado.png"))); // NOI18N
        btnCambiar.setText("Cambiar");
        btnCambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtfiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCerrar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnPago, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154)
                        .addComponent(btnCambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSeleccionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addGap(4, 4, 4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtfiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnCerrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPago)
                    .addComponent(btnEliminar)
                    .addComponent(btnSeleccionar)
                    .addComponent(btnActualizar)
                    .addComponent(btnCambiar))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumeroActionPerformed

    private void buscarHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarHabitacionActionPerformed
        // TODO add your handling code here:
        frmVistaHabitacion form = new frmVistaHabitacion();
        form.toFront();
        form.setVisible(true);
    }//GEN-LAST:event_buscarHabitacionActionPerformed

    private void txtidhabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidhabitacionActionPerformed
        // TODO add your handling code here:
        txtidhabitacion.setEditable(false);
    }//GEN-LAST:event_txtidhabitacionActionPerformed

    private void txtidclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidclienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidclienteActionPerformed

    private void BuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarClienteActionPerformed
        // TODO add your handling code here:
        frmVistaCliente form = new frmVistaCliente();
        form.toFront();
        form.setVisible(true);
    }//GEN-LAST:event_BuscarClienteActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        LimpiarControles();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void LimpiarControles() {
        txtidhabitacion.setText("");
        txtidcliente.setText("");
        datFechaL.setDate(null);
        datFechaS.setDate(null);
        txtnoches.setText("");
        cmbEstado.setSelectedIndex(0);
    }

    private boolean Validar() {
        if (txtidhabitacion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione una habitación");
            txtidhabitacion.requestFocus();
            return false;
        }
        if (txtidcliente.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione un cliente");
            txtidcliente.requestFocus();
            return false;
        }
        if (datFechaL.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Seleccione una fecha de llegada");
            datFechaL.requestFocus();
            return false;
        }
        if (datFechaS.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Seleccione una fecha de salida");
            datFechaS.requestFocus();
            return false;
        }
        if (txtnoches.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Escriba la cantidad de noches");
            txtnoches.requestFocus();
            return false;
        }
        if (cmbEstado.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un estado");
            cmbEstado.requestFocus();
            return false;
        }
        return true;
    }


    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        if (Validar() == false) {
            JOptionPane.showMessageDialog(null, "Falta ingresar datos");
            return;
        }

        if (JOptionPane.showConfirmDialog(rootPane, "¿Realmente desea continuar?", "Agregar Reserva", JOptionPane.INFORMATION_MESSAGE, JOptionPane.YES_NO_OPTION) != JOptionPane.YES_OPTION) {
            return;
        }

        int idHabitacion = Integer.parseInt(txtidhabitacion.getText());
        int idCliente = Integer.parseInt(txtidcliente.getText());
        LocalDate fechaLlegada = datFechaL.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechaSalida = datFechaS.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        int numeroNoches = Integer.parseInt(txtnoches.getText());
        String estado = cmbEstado.getSelectedItem().toString();

        Reserva reserva = new Reserva(0, idHabitacion, idCliente, fechaLlegada, fechaSalida, numeroNoches, estado);

        DAO.Guardar(reserva);
        JOptionPane.showMessageDialog(null, "Reserva Guardada Correctamente");

        LimpiarControles();
        RecuperarDesdeBD();

    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void Filtrar(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Filtrar
        // TODO add your handling code here:
        Filtrar();
    }//GEN-LAST:event_Filtrar

    private void txtidreservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidreservaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidreservaActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        int filaSeleccionada = tablaReserva.getSelectedRow();

        int columnaId = 0;

        if (filaSeleccionada < 0) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila", "Resultado", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int idReserva = Integer.parseInt(tablaReserva.getValueAt(filaSeleccionada, columnaId).toString());
        Reserva reserva = DAO.Leer(idReserva);

        if (reserva != null) {
            txtidreserva.setText(String.valueOf(reserva.getIdReserva()));
            txtidhabitacion.setText(String.valueOf(reserva.getIdHabitacion()));
            txtidcliente.setText(String.valueOf(reserva.getIdCliente()));
            Date fechaLlegada = Date.from(reserva.getFechaLlegada().atStartOfDay(ZoneId.systemDefault()).toInstant());
            Date fechaSalida = Date.from(reserva.getFechaSalida().atStartOfDay(ZoneId.systemDefault()).toInstant());
            datFechaL.setDate(fechaLlegada);
            datFechaS.setDate(fechaSalida);
            txtnoches.setText(String.valueOf(reserva.getNumeroNoches()));
            cmbEstado.setSelectedItem(reserva.getEstadoR());
        }
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void tablaReservaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaReservaMousePressed
        // TODO add your handling code here:
        tablaReserva.setDefaultEditor(Object.class, null);
        if (evt.getClickCount() == 2) { // Detecta doble clic
            int filaSeleccionada = tablaReserva.getSelectedRow();
            if (filaSeleccionada != -1) {
                String cod = tablaReserva.getValueAt(filaSeleccionada, 0).toString();
                System.out.println("ID de reserva seleccionado: " + cod);
                frmReserva.txtidreserva.setText(cod);

                try {
                    int idReserva = Integer.parseInt(cod);

                    frmVistaReserva inst = new frmVistaReserva();

                    DAO.mostrarReservaConDetalle(idReserva, inst);

                    escritorio.add(inst);
                    inst.toFront();
                    inst.setVisible(true);

                } catch (NumberFormatException e) {
                    System.err.println("Error al convertir ID de reserva a entero: " + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_tablaReservaMousePressed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaReserva.getSelectedRow();

        if (filaSeleccionada < 0) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna reserva", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (JOptionPane.showConfirmDialog(rootPane, "Se eliminará la reserva seleccionada, ¿desea continuar?",
                "Eliminar Reserva", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) != JOptionPane.YES_OPTION) {
            return;
        }

        int idReserva = Integer.parseInt(tablaReserva.getValueAt(filaSeleccionada, 0).toString());

        DAO.Eliminar(idReserva);

        JOptionPane.showMessageDialog(null, "Reserva eliminada correctamente", "Resultado", JOptionPane.INFORMATION_MESSAGE);

        RecuperarDesdeBD();

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        if (Validar() == false) {
            JOptionPane.showMessageDialog(null, "Falta ingresar datos");
            return;
        }

        int ID_Recuperado = Integer.parseInt(txtidreserva.getText());

        int idReserva = ID_Recuperado;
        int idHabitacion = Integer.parseInt(txtidhabitacion.getText());
        int idCliente = Integer.parseInt(txtidcliente.getText());
        LocalDate fechaLlegada = datFechaL.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechaSalida = datFechaS.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        int numeroNoches = Integer.parseInt(txtnoches.getText());
        String estado = cmbEstado.getSelectedItem().toString();

        Reserva reserva = new Reserva(idReserva, idCliente, idHabitacion, fechaLlegada, fechaSalida, numeroNoches, estado);
        DAO.Actualizar(reserva);

        JOptionPane.showMessageDialog(null, "Reserva Actualizada Correctamente");

        LimpiarControles();
        RecuperarDesdeBD();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagoActionPerformed
        // TODO add your handling code here:
        int fila = tablaReserva.getSelectedRow();
        int columnaId = 0;

        if (fila < 0) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila", "Resultado", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int idReserva = Integer.parseInt(tablaReserva.getValueAt(fila, columnaId).toString());
        Reserva reserva = DAO.Leer(idReserva);

        if (reserva != null) {
            txtidreserva.setText(String.valueOf(reserva.getIdReserva()));
        }

        idReserva = Integer.parseInt(txtidreserva.getText());

        BigDecimal costoTotal = DAO.calcularCostoTotalReserva(idReserva);
        String nombreCliente = DAO.obtenerNombreCliente(idReserva);
        BigDecimal totalConsumos = DAO.calcularTotalConsumos(idReserva); // Solo debería incluir los consumos "Aceptado"

        BigDecimal subtotal = costoTotal.add(totalConsumos);
        BigDecimal igv = subtotal.multiply(BigDecimal.valueOf(0.18));
        BigDecimal totalPagar = subtotal.add(igv);

        DecimalFormat df = new DecimalFormat("#.00");

        frmPago inst = new frmPago();
        frmMain.escritorio.add(inst);
        inst.toFront();
        inst.setVisible(true);

        inst.lblCostoTotal.setText(df.format(costoTotal));
        inst.txtidreserva.setText(String.valueOf(idReserva));
        inst.txtcliente.setText(nombreCliente);
        inst.lblTotalConsumos.setText(df.format(totalConsumos)); // Debería mostrar solo los consumos "Aceptado"
        inst.txtigv.setText(df.format(igv));
        inst.txtTotalPago.setText(df.format(totalPagar));

    }//GEN-LAST:event_btnPagoActionPerformed

    private void btnCambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarActionPerformed
        try {
            // Obtener la fila seleccionada en la tabla
            int selectedRow = tablaReserva.getSelectedRow();

            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Por favor, selecciona una reserva de la tabla.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Obtener el idReserva de la fila seleccionada
            int idReserva = Integer.parseInt(tablaReserva.getValueAt(selectedRow, 0).toString());
            Reserva reserva = DAO.obtenerReservaPorId(idReserva);

            if (reserva == null) {
                JOptionPane.showMessageDialog(this, "Reserva no encontrada", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Cambiar el estado según el estado actual
            String nuevoEstado;
            if (reserva.getEstadoR().equals("Reservada")) {
                nuevoEstado = "Hospedaje";
            } else if (reserva.getEstadoR().equals("Reservada-Pagado")) {
                nuevoEstado = "Hospedaje-Pagado";
            } else {
                JOptionPane.showMessageDialog(this, "Estado actual no permite cambio a Hospedaje", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Actualizar el estado de la reserva
            DAO.actualizarEstado(idReserva, nuevoEstado);

            JOptionPane.showMessageDialog(this, "Reserva cambiada correctamente a " + nuevoEstado);

            // Refrescar la tabla para mostrar los cambios
            actualizarTablaReservas();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error en el formato de los datos numéricos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cambiar el estado de la reserva: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnCambiarActionPerformed

    private void actualizarTablaReservas() {
        List<Reserva> listaReservas = DAO.ListarReservas();
        DefaultTableModel model = (DefaultTableModel) tablaReserva.getModel();
        model.setRowCount(0); // Limpiar la tabla

        for (Reserva reserva : listaReservas) {
            model.addRow(new Object[]{
                reserva.getIdReserva(),
                reserva.getIdCliente(),
                reserva.getIdHabitacion(),
                reserva.getFechaLlegada(),
                reserva.getFechaSalida(),
                reserva.getNumeroNoches(),
                reserva.getEstadoR()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmReserva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarCliente;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCambiar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnPago;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JButton buscarHabitacion;
    private javax.swing.JComboBox<String> cmbEstado;
    private com.toedter.calendar.JDateChooser datFechaL;
    private com.toedter.calendar.JDateChooser datFechaS;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaReserva;
    public static javax.swing.JTextField txtcliente;
    private javax.swing.JTextField txtfiltrar;
    public static javax.swing.JTextField txtidcliente;
    public static javax.swing.JTextField txtidhabitacion;
    public static javax.swing.JTextField txtidreserva;
    private javax.swing.JTextField txtnoches;
    public static javax.swing.JTextField txtnumero;
    // End of variables declaration//GEN-END:variables
}
